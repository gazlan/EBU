/* ******************************************************************** **
** @@ CRC32 Source File
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update :
** @  Dscr   : 
** ******************************************************************** */

/* ******************************************************************** **
**                uses pre-compiled headers
** ******************************************************************** */

#include "stdafx.h"

#include "hash_crc32.h"

/* ******************************************************************** **
** @@ internal defines
** ******************************************************************** */

#ifdef _MFC_VER
#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif
#endif

/* ******************************************************************** **
** @@                   internal prototypes
** ******************************************************************** */

/* ******************************************************************** **
** @@                   external global variables
** ******************************************************************** */

/* ******************************************************************** **
** @@                   static global variables
** ******************************************************************** */

/* ******************************************************************** **
** @@                   real code
** ******************************************************************** */

/* ******************************************************************** **
** @@ CRC32::CRC32
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update :
** @  Notes  : Constructor
** ******************************************************************** */

CRC32::CRC32()
{
   Reset();

   memset(_pTable,0,sizeof(_pTable));

   for (DWORD ii = 0; ii < 256; ++ii)
   {
      DWORD    dwShifter = ii;

      for (int jj = 8; jj; --jj)
      {
         dwShifter =
            (dwShifter &  1)               ?   // GF(2)
            (dwShifter >> 1) ^ 0xEDB88320  :   // MUL & ADD
             dwShifter >> 1;                   // MUL
      }

      _pTable[ii] = dwShifter;
   }
}

/* ******************************************************************** **
** @@ CRC32::~CRC32
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update : 
** @  Notes  : Destructor
** ******************************************************************** */

CRC32::~CRC32()
{
}

/* ******************************************************************** **
** @@ CRC32::Reset()
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update : 
** @  Notes  : 
** ******************************************************************** */

void CRC32::Reset()
{
   _dwCRC32 = 0xFFFFFFFF;
}

/* ******************************************************************** **
** @@ Calc()
** @  Copyrt : 
** @  Author : 
** @  Modify :
** @  Update : 
** @  Notes  :
** ******************************************************************** */

DWORD CRC32::Calc
(
   const BYTE* const    pBuf,
   DWORD                dwSize
)
{  
   if (!dwSize || !pBuf)
   {
      // Error !
      ASSERT(0);
      return 0;
   }

   if (IsBadReadPtr(pBuf,dwSize))
   {
      // Error !
      ASSERT(0);
      return 0;
   }

   for (DWORD ii = 0; ii < dwSize; ++ii)
   {
      _dwCRC32 = ((_dwCRC32 >> 8) & 0x0FFFFFFF) ^ _pTable[(BYTE)(_dwCRC32 ^ pBuf[ii])];
   }

   return _dwCRC32 ^ 0xFFFFFFFF;
}

/* ******************************************************************** **
** @@                   End of File
** ******************************************************************** */
